{"version":3,"sources":["RedditList/RedditList.jsx","RedditDesc/RedditDesc.jsx","SideNav/SideNav.jsx","App.js","serviceWorker.js","index.js"],"names":["RedditList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","console","log","topUrl","concat","fetch","then","res","json","result","data","children","redditList","hiddenList","visitedList","forEach","item","state","indexOf","id","hidden","push","visited","setState","isLoaded","error","onItemClick","e","isState","perist","set","preventDefault","forceUpdate","onDismiss","name","onDismissAll","isShown","length","isHidden","bind","assertThisInitialized","key","localStorage","setItem","JSON","stringify","get","parse","getItem","clear","hasError","_this2","_this$state","react_default","a","createElement","message","className","map","title","onClick","author","lib_default","date","created","src","thumbnail","alt","href","num_comments","onRestoreAll","React","Component","RedditDesc","componentWillMount","componentWillReceiveProps","nextProps","componentWillUpdate","nextState","componentDidUpdate","componentWillUnmount","SideNav","open","handleDrawerOpen","handleDrawerClose","mobileOpen","_this$props","classes","theme","root","CssBaseline_default","Drawer_default","drawer","variant","anchor","paper","drawerPaper","Divider_default","src_RedditList_RedditList","classNames","content","defineProperty","contentShift","drawerHeader","src_RedditDesc_RedditDesc","withStyles","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","App","src_SideNav_SideNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc4387c8.chunk.js","sourcesContent":["import React from 'react';\nimport './RedditList.scss';\n\nimport TimeAgo from 'react-timeago';\n \nclass RedditList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onItemClick = this.onItemClick.bind(this);\n\n    // todo: move to redux?\n    this.perist = {\n      set(key, data) {\n        try {\n          localStorage.setItem(key, JSON.stringify(data));\n        } catch (e) {\n          console.error('Error saving to localStorage', e);\n        }\n      },\n      get(key) {\n        try {\n          return JSON.parse(localStorage.getItem(key));\n        } catch (e) {\n          console.error('Error getting data from localStorage', e);\n          return null;\n        }\n      },\n      clear() {\n        localStorage.clear();\n      }\n    }\n\n    this.state = {\n      hasError: false,\n\n      error: null,\n      isLoaded: false,\n      redditList: [],\n      hiddenList: this.perist.get('hiddenList') || [],\n      visitedList: this.perist.get('visitedList') || []\n    };\n\n  }\n\n\n  componentDidMount = () => {\n    console.log('RedditList mounted');\n    const num = 50;\n    const topUrl = `https://www.reddit.com/r/all/top.json?limit=${num}`;\n    //this.hiddenList = this.perist.get('hidden') || [];\n    //this.visitedList = this.perist.get('visited') || [];\n\n    fetch(topUrl)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log('chilidren', result.data.children);\n\n          const redditList = result.data.children;\n          const hiddenList = [];\n          const visitedList = [];\n\n          // pushed dismissed and visted into items\n          redditList.forEach(item => {\n            if (this.state.hiddenList.indexOf(item.data.id) > -1) {\n              item.data.hidden = true;\n              hiddenList.push(item.data.id);\n            }\n            if (this.state.visitedList.indexOf(item.data.id) > -1) {\n              item.data.visited = true;\n              visitedList.push(item.data.id);\n            }\n\n          });\n\n          //push the state from the load into\n          this.setState({\n            isLoaded: true,\n            redditList: redditList,\n            hiddenList: hiddenList,\n            visitedList: visitedList\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  /**\n   * click events\n   */\n  onItemClick = (item, e) => {\n    item.data.visited = true;\n\n    let visitedList = this.state.visitedList;\n \n    if(!this.isState('visitedList', item.data.id)){\n      visitedList.push(item.data.id);\n      this.perist.set('visitedList', visitedList);\n      this.setState({\n        visitedList: visitedList\n      });\n    }\n\n    e.preventDefault();\n    this.forceUpdate();\n    this.props.onItemClick(item);\n  };\n\n  /**\n   * dismiss item\n   */\n  onDismiss = (item, e) => {\n    item.data.hidden = true;\n    let hiddenList = this.state.hiddenList;\n    hiddenList.push(item.data.id);\n \n    this.perist.set('hiddenList', hiddenList);\n    this.setState({\n      hiddenList: hiddenList\n    });\n\n    e.preventDefault();\n    this.forceUpdate();\n    console.log(\"item dismiss called\", item);\n  };\n\n  isState = (name, id) => {\n    return this.state[name].indexOf(id) > -1;\n  }\n\n\n  /**\n   * dismiss all listings by adding them all to a list and then pushing to persistence\n   */\n  onDismissAll = (redditList) => {\n\n    console.log('dismissAll called');\n    const { hiddenList } = this.state;\n\n    redditList.forEach(item => {\n      const id = item.data.id;\n      item.data.hidden = true;\n      if (hiddenList.indexOf(id) === -1) {\n        hiddenList.push(id);\n      }\n    });\n    this.perist.set('hiddenList', hiddenList);\n    this.setState({ redditList: redditList, hiddenList: hiddenList });\n\n    this.forceUpdate();\n  }\n  /**\n   * restore all listings or we cant see them again if persisted\n   */\n  onRestoreAll() {\n    console.log('restoreAll called');\n    const { redditList } = this.state;\n\n    redditList.forEach(item => {\n      item.data.hidden = false;\n    });\n\n    this.setState({ redditList: redditList, hiddenList: [], visitedList: [] });\n\n    //todo get a persist localStorage lib\n    this.perist.set('visitedList', []);\n    this.perist.set('hiddenList', []);\n\n    this.forceUpdate();\n  }\n\n  isShown = () => {\n    return (this.redditList.length > 0) && (this.hiddenList.length < 49);\n  };\n\n  isHidden = () => {\n    return this.redditList.length > 0 && this.hiddenList.length > 1\n  };\n\n  render() {\n    const { error, isLoaded, redditList } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div id=\"item-list\">\n          <h1 className=\"text-center\">Reddit Posts</h1>\n\n          <ul className=\"list-unstyled\">\n            {redditList.map(item => (\n              <div key={item.data.title}>\n                {/* hidden?????? {String(item.data.hidden )} */}\n                {/* visited?????? {String(item.data.visited )} */}\n\n                {!item.data.hidden &&\n                  <li\n                    className=\"nav-item\">\n                    {/* [@enterAnimation] */}\n\n                    <div className=\"row cursor-pointer\"\n                      onClick={(e) => this.onItemClick(item, e)} >\n\n                      <div className=\"col-md-10\">\n                        <span\n                          className={\"bluebullets \" + (item.data.visited ? 'visited' : '')}>\n\n                          &bull;</span>\n                        <span className=\"cursor-pointer\"\n                        >\n                          {item.data.author} <TimeAgo date={item.data.created * 1000} />\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"row align-items-center cursor-pointer\"\n                      onClick={(e) => this.onItemClick(item, e)}\n                    >\n                      <div className=\"col-md-5 col-sm-5 col-5\">\n\n                        <span className=\"cursor-pointer\"\n                        >\n                          <img src={item.data.thumbnail}\n                            alt=\"item.data.title\" />\n\n                        </span>\n                      </div>\n\n                      <div className=\"col-md-5 col-sm-5 col-5 cursor-pointer\" >\n                        <span className=\"cursor-pointer\" >\n                          {item.data.title}\n                        </span>\n                      </div>\n                      <div className=\"col-md-1 col-sm-1 col-1\">\n\n                        <div className=\"d-table\">\n                          <span className=\"d-table-cell align-middle\">\n\n                            <i className=\"material-icons\">\n                              chevron_right\n                            </i>\n                          </span>\n                        </div>\n                      </div>\n\n                    </div>\n                    <div className=\"row\">\n\n                      <div className=\"col-md-5 col-5\">\n                        <a\n                          href=\"#home\"\n                          className=\"cursor-pointer dismiss-click\"\n                          onClick={(e) => this.onDismiss(item, e)} >\n\n                          <i className=\"material-icons nothing-rhymes-with-orange\">\n                            highlight_off\n                          </i>\n                          Dismiss Post </a>\n                      </div>\n                      <div className=\"col-md-5 col-5\">\n                        <span className=\"nothing-rhymes-with-orange d-inline-block pull-right ml-1\">\n                          {item.data.num_comments}\n                          comments\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-md-10 offset-md-1 bdr-btm mt-2\"></div>\n                    </div>\n                  </li>\n                }\n              </div>\n            ))}\n          </ul>\n\n\n          {this.isShown &&\n            <a href=\"#home\"\n              onClick={(e) => this.onDismissAll(redditList, e)}\n\n              className=\"cursor-pointer nothing-rhymes-with-orange\">\n\n              <i className=\"material-icons nothing-rhymes-with-orange \">\n                highlight_off\n          </i>\n\n              Dismiss All </a>\n          }\n\n          {this.isHidden &&\n            <a href=\"#home\"\n              onClick={(e) => this.onRestoreAll(e)}\n              className=\"cursor-pointer nothing-rhymes-with-orange \"  >\n              <i className=\"material-icons nothing-rhymes-with-orange \"> highlight_off\n            </i> Restore All </a>\n          }\n        </div>\n\n      );\n    }\n  }\n}\n\n\nexport default RedditList;\n","import React from 'react';\nimport './RedditDesc.scss';\n\nclass RedditDesc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      isLoaded: false,\n    };\n\n  }\n\n  componentWillMount = () => {\n    console.log('RedditDesc will mount');\n  }\n  componentDidMount = () => {\n    console.log('RedditDesc mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('RedditDesc will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('RedditDesc will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('RedditDesc did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('RedditDesc will unmount');\n  }\n\n  render() {\n    const { error } = this.state;\n    const item = this.props.item;\n\n    console.log(this.state, \"state passed to desc\");\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!item) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"container\" >\n          <div className=\"row\" >\n            <div className=\"offset-md-1 col-md-10\">\n              <h1>{item.data.author}</h1>\n            </div>\n          </div>\n          <div className=\"row mt-1\">\n\n            <div className=\"offset-md-3 col-md-6\">\n\n              <img src={item.data.thumbnail}\n                alt={item.data.title} />\n            </div>\n\n          </div>\n          <div className=\"row mt-1\">\n\n            <div className=\"offset-md-1 col-md-10\">\n              <h5>{item.data.title}</h5>\n            </div>\n          </div>\n\n        </div>\n\n      );\n    }\n  }\n}\n\nexport default RedditDesc;\n","import React from 'react';\nimport RedditList from '../RedditList/RedditList';\nimport RedditDesc from '../RedditDesc/RedditDesc';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\n\nconst drawerWidth = 480;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass SideNav extends React.Component {\n\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: true,\n      hasError: false,\n      mobileOpen: false,\n      item: {\n        data: {\n          author: '',\n          title: ''\n        }\n      }\n    };\n  }\n\n  /** passed from child */\n  onItemClick = (item) => {\n    console.log(item, \"itemclick in parent called\");\n    this.setState({\n      item: item\n    });\n  }\n\n  render() {\n\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    } else {\n      return (\n        <section>\n          <div className={classes.root}>\n            <CssBaseline />\n           \n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={open}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n          \n              <Divider />\n              <RedditList onItemClick={this.onItemClick}>\n              </RedditList>\n            </Drawer>\n            <main\n              className={classNames(classes.content, {\n                [classes.contentShift]: open,\n              })}\n            >\n              <div className={classes.drawerHeader} />\n               \n             \n              <RedditDesc item={this.state.item}>\n              </RedditDesc>\n            </main>\n          </div>\n\n        </section>\n      );\n\n    }\n  }\n}\n\n//export default SideNav;\n\nSideNav.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SideNav)","import React, { Component } from 'react';\nimport './App.scss';\nimport SideNav from './SideNav/SideNav';\n\nclass App extends Component {\n  render() {\n    return (\n     <SideNav></SideNav>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}