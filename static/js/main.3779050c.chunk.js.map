{"version":3,"sources":["RedditList/RedditList.jsx","RedditDesc/RedditDesc.jsx","SideNav/SideNav.jsx","App.js","serviceWorker.js","index.js"],"names":["RedditList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","console","log","componentDidMount","topUrl","concat","fetch","then","res","json","result","data","children","setState","isLoaded","redditList","error","componentWillReceiveProps","nextProps","componentWillUpdate","nextState","componentDidUpdate","componentWillUnmount","onItemClick","item","e","visited","preventDefault","forceUpdate","onDismiss","hidden","onDismissAll","hiddenList","state","forEach","id","indexOf","push","perist","set","isShown","length","isHidden","bind","assertThisInitialized","hasError","visitedList","key","value","_this2","_this$state","react_default","a","createElement","message","className","map","title","onClick","author","lib_default","date","created","src","thumbnail","alt","href","num_comments","onRestoreAll","React","Component","RedditDesc","SideNav","open","handleDrawerOpen","handleDrawerClose","mobileOpen","_this$props","classes","theme","root","CssBaseline_default","Drawer_default","drawer","variant","anchor","paper","drawerPaper","Divider_default","src_RedditList_RedditList","classNames","content","defineProperty","contentShift","drawerHeader","src_RedditDesc_RedditDesc","withStyles","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","App","src_SideNav_SideNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3779050c.chunk.js","sourcesContent":["import React from 'react';\nimport './RedditList.scss';\n\nimport TimeAgo from 'react-timeago';\n \nclass RedditList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onItemClick = this.onItemClick.bind(this);\n\n    this.state = {\n      hasError: false,\n\n      error: null,\n      isLoaded: false,\n      redditList: [],\n      hiddenList: [],\n      visitedList: []\n    };\n\n    this.perist = {\n      set: (key, value) => {\n        console.log('set called todo push to localstorage!!', key, value);\n      }\n\n    }\n  }\n\n  componentWillMount = () => {\n    console.log('RedditList will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('RedditList mounted');\n    const num = 5;\n    const topUrl = `https://www.reddit.com/r/all/top.json?limit=${num}`;\n    fetch(topUrl)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log('chilidren', result.data.children);\n          this.setState({\n            isLoaded: true,\n            redditList: result.data.children\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('RedditList will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('RedditList will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('RedditList did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('RedditList will unmount');\n  }\n\n  /**\n   * click events\n   */\n  onItemClick = (item, e) => {\n    item.data.visited = true;\n    e.preventDefault();\n    this.forceUpdate();\n    this.props.onItemClick(item);\n\n  };\n\n  onDismiss = (item, e) => {\n    item.data.hidden = true;\n    e.preventDefault();\n    this.forceUpdate();\n    // this.setState({redditList: this.redditList});\n    console.log(\"item dismiss called\", item);\n  };\n\n\n  /**\n   * dismiss all listings by adding them all to a list and then pushing to persistence\n   */\n  onDismissAll = (redditList) => {\n\n    console.log('dismissAll called');\n    const { hiddenList } = this.state;\n\n    redditList.forEach(item => {\n      const id = item.data.id;\n      item.data.hidden = true;\n      if (hiddenList.indexOf(id) === -1) {\n        hiddenList.push(id);\n      }\n    });\n    this.perist.set('hidden', this.hiddenList);\n    this.setState({ redditList: redditList, hiddenList: hiddenList });\n\n    this.forceUpdate();\n  }\n  /**\n   * restore all listings or we cant see them again if persisted\n   */\n  onRestoreAll() {\n    console.log('restoreAll called');\n    const { redditList } = this.state;\n\n    redditList.forEach(item => {\n      item.data.hidden = false;\n    });\n\n    this.setState({ redditList: redditList, hiddenList: [], visitedList: [] });\n\n    //todo get a persist localStorage lib\n    this.perist.set('visited', []);\n    this.perist.set('hidden', []);\n\n    this.forceUpdate();\n  }\n\n\n  isShown = () => {\n    return (this.redditList.length > 0) && (this.hiddenList.length < 49);\n  };\n\n  isHidden = () => {\n    return this.redditList.length > 0 && this.hiddenList.length > 1\n  };\n\n  render() {\n    const { error, isLoaded, redditList } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div id=\"item-list\">\n          <h1 className=\"text-center\">Reddit Posts</h1>\n\n          <ul className=\"list-unstyled\">\n            {redditList.map(item => (\n              <div key={item.data.title}>\n                {/* hidden?????? {String(item.data.hidden )} */}\n                {/* visited?????? {String(item.data.visited )} */}\n\n                {!item.data.hidden &&\n                  <li\n                    className=\"nav-item\">\n                    {/* [@enterAnimation] */}\n\n                    <div className=\"row cursor-pointer\"\n                      onClick={(e) => this.onItemClick(item, e)} >\n\n                      <div className=\"col-md-10\">\n                        <span\n                          className={\"bluebullets \" + (item.data.visited ? 'visited' : '')}>\n\n                          &bull;</span>\n                        <span className=\"cursor-pointer\"\n                        >\n                          {item.data.author} <TimeAgo date={item.data.created * 1000} />\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"row align-items-center cursor-pointer\"\n                      onClick={(e) => this.onItemClick(item, e)}\n                    >\n                      <div className=\"col-md-5 col-sm-5 col-5\">\n\n                        <span className=\"cursor-pointer\"\n                        >\n                          <img src={item.data.thumbnail}\n                            alt=\"item.data.title\" />\n\n                        </span>\n                      </div>\n\n                      <div className=\"col-md-5 col-sm-5 col-5 cursor-pointer\" >\n                        <span className=\"cursor-pointer\" >\n                          {item.data.title}\n                        </span>\n                      </div>\n                      <div className=\"col-md-1 col-sm-1 col-1\">\n\n                        <div className=\"d-table\">\n                          <span className=\"d-table-cell align-middle\">\n\n                            <i className=\"material-icons\">\n                              chevron_right\n                            </i>\n                          </span>\n                        </div>\n                      </div>\n\n                    </div>\n                    <div className=\"row\">\n\n                      <div className=\"col-md-5 col-5\">\n                        <a\n                          href=\"#home\"\n                          className=\"cursor-pointer dismiss-click\"\n                          onClick={(e) => this.onDismiss(item, e)} >\n\n                          <i className=\"material-icons nothing-rhymes-with-orange\">\n                            highlight_off\n                          </i>\n                          Dismiss Post </a>\n                      </div>\n                      <div className=\"col-md-5 col-5\">\n                        <span className=\"nothing-rhymes-with-orange d-inline-block pull-right ml-1\">\n                          {item.data.num_comments}\n                          comments\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-md-10 offset-md-1 bdr-btm mt-2\"></div>\n                    </div>\n                  </li>\n                }\n              </div>\n            ))}\n          </ul>\n\n\n          {this.isShown &&\n            <a href=\"#home\"\n              onClick={(e) => this.onDismissAll(redditList, e)}\n\n              className=\"cursor-pointer nothing-rhymes-with-orange\">\n\n              <i className=\"material-icons nothing-rhymes-with-orange \">\n                highlight_off\n          </i>\n\n              Dismiss All </a>\n          }\n\n          {this.isHidden &&\n            <a href=\"#home\"\n              onClick={(e) => this.onRestoreAll(e)}\n              className=\"cursor-pointer nothing-rhymes-with-orange \"  >\n              <i className=\"material-icons nothing-rhymes-with-orange \"> highlight_off\n            </i> Restore All </a>\n          }\n        </div>\n\n      );\n    }\n  }\n}\n\n\nexport default RedditList;\n","import React from 'react';\nimport './RedditDesc.scss';\n\nclass RedditDesc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      isLoaded: false,\n    };\n\n  }\n\n  componentWillMount = () => {\n    console.log('RedditDesc will mount');\n  }\n  componentDidMount = () => {\n    console.log('RedditDesc mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('RedditDesc will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('RedditDesc will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('RedditDesc did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('RedditDesc will unmount');\n  }\n\n  render() {\n    const { error } = this.state;\n    const item = this.props.item;\n\n    console.log(this.state, \"state passed to desc\");\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!item) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"container\" >\n          <div className=\"row\" >\n            <div className=\"offset-md-1 col-md-10\">\n              <h1>{item.data.author}</h1>\n            </div>\n          </div>\n          <div className=\"row mt-1\">\n\n            <div className=\"offset-md-3 col-md-6\">\n\n              <img src={item.data.thumbnail}\n                alt={item.data.title} />\n            </div>\n\n          </div>\n          <div className=\"row mt-1\">\n\n            <div className=\"offset-md-1 col-md-10\">\n              <h5>{item.data.title}</h5>\n            </div>\n          </div>\n\n        </div>\n\n      );\n    }\n  }\n}\n\nexport default RedditDesc;\n","import React from 'react';\nimport RedditList from '../RedditList/RedditList';\nimport RedditDesc from '../RedditDesc/RedditDesc';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\n\nconst drawerWidth = 480;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass SideNav extends React.Component {\n\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: true,\n      hasError: false,\n      mobileOpen: false,\n      item: {\n        data: {\n          author: '',\n          title: ''\n        }\n      }\n    };\n  }\n\n  /** passed from child */\n  onItemClick = (item) => {\n    console.log(item, \"itemclick in parent called\");\n    this.setState({\n      item: item\n    });\n  }\n\n  render() {\n\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    } else {\n      return (\n        <section>\n          <div className={classes.root}>\n            <CssBaseline />\n           \n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={open}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n          \n              <Divider />\n              <RedditList onItemClick={this.onItemClick}>\n              </RedditList>\n            </Drawer>\n            <main\n              className={classNames(classes.content, {\n                [classes.contentShift]: open,\n              })}\n            >\n              <div className={classes.drawerHeader} />\n               \n             \n              <RedditDesc item={this.state.item}>\n              </RedditDesc>\n            </main>\n          </div>\n\n        </section>\n      );\n\n    }\n  }\n}\n\n//export default SideNav;\n\nSideNav.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SideNav)","import React, { Component } from 'react';\nimport './App.scss';\nimport SideNav from './SideNav/SideNav';\n\nclass App extends Component {\n  render() {\n    return (\n     <SideNav></SideNav>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}